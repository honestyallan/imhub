syntax = "proto3";
package imhub.node.v1;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

import "imhub/node/v1/node.proto";
import "imhub/types/v1/status.proto";

option go_package = "github.com/dun-io/imhub/x/node/types/v1";
option (gogoproto.equal_all) = false;
option (gogoproto.goproto_getters_all) = false;
// Query defines the gRPC querier service.
service Query {
  rpc QueryNodes(QueryNodesRequest) returns (QueryNodesResponse) {
    option (google.api.http).get = "/imhub/node/v1/nodes";
  }
}

message QueryNodesRequest {
  imhub.types.v1.Status status = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryNodesResponse {
  repeated Node nodes = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
